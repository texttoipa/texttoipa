{"version":3,"sources":["assets/img/speaker.svg","assets/mp3IPA/i1.mp3","assets/mp3IPA/æ.mp3","assets/mp3IPA/ɒ.mp3","assets/mp3IPA/ɪ.mp3","assets/mp3IPA/e.mp3","assets/mp3IPA/ʌ.mp3","assets/mp3IPA/ɑ1.mp3","assets/mp3IPA/ɔ1.mp3","assets/mp3IPA/ʊ.mp3","assets/mp3IPA/u1.mp3","assets/mp3IPA/ɜ1.mp3","assets/mp3IPA/ə.mp3","assets/mp3IPA/ei.mp3","assets/mp3IPA/aɪ.mp3","assets/mp3IPA/ɔɪ.mp3","assets/mp3IPA/aʊ.mp3","assets/mp3IPA/əʊ.mp3","assets/mp3IPA/ɪə.mp3","assets/mp3IPA/eə.mp3","assets/mp3IPA/ʊə.mp3","assets/mp3IPA/p.mp3","assets/mp3IPA/b.mp3","assets/mp3IPA/t.mp3","assets/mp3IPA/d.mp3","assets/mp3IPA/k.mp3","assets/mp3IPA/g.mp3","assets/mp3IPA/s.mp3","assets/mp3IPA/z.mp3","assets/mp3IPA/ʃ.mp3","assets/mp3IPA/ʒ.mp3","assets/mp3IPA/tʃ.mp3","assets/mp3IPA/dʒ.mp3","assets/mp3IPA/f.mp3","assets/mp3IPA/v.mp3","assets/mp3IPA/w.mp3","assets/mp3IPA/j.mp3","assets/mp3IPA/h.mp3","assets/mp3IPA/θ.mp3","assets/mp3IPA/ð.mp3","assets/mp3IPA/m.mp3","assets/mp3IPA/n.mp3","assets/mp3IPA/l.mp3","assets/mp3IPA/r.mp3","assets/mp3IPA/ŋ.mp3","assets/img/refresh.svg","components/SpeakText/index.js","assets/mp3IPA/index.js","components/KeypressIpa/index.js","App.js","helpers/RandomWords.js","serviceWorker.js","index.js"],"names":["module","exports","InitSpeech","voices","console","log","speech","Speech","hasBrowserSupport","init","then","data","catch","e","error","SpeechText","React","memo","props","text","playSpeech","speak","className","onClick","src","SpeakerIcon","i1","æ","ɒ","ɪ","ʌ","ɑ1","ɔ1","ʊ","u1","ɜ1","eɪ","ə","aɪ","ɔɪ","aʊ","əʊ","ɪə","eə","ʊə","p","b","t","d","k","g","s","z","ʃ","ʒ","tʃ","dʒ","f","v","w","j","h","θ","ð","m","n","l","r","ŋ","buttonExtent","KeyAPI","keySpelling","onChange","map","key","index","getID","replace","Fragment","onMouseOver","audio1","document","getElementById","play","playIPA","id","MP3","type","spelling","split","boardKey","TT","Translator","App","initPhonetic","translate","useState","words","setWords","phonetic","setPhonetic","currentPhonetic","setCurrentPhonetic","isTrue","_newPhonetic","slice","_newWord","exactly","maxLength","RandomWords","randomWords","alt","RefreshIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.ae2ac1d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/speaker.7b4c7a37.svg\";","module.exports = __webpack_public_path__ + \"static/media/i1.81f7900b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/æ.51e3cf9f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɒ.423c8798.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɪ.f6196f5e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/e.1ea44e04.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ʌ.c806b5e1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɑ1.9b4864ed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɔ1.8badfa19.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ʊ.aeebc07e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/u1.b92d38b8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɜ1.6fd6f71c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ə.32f04f62.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ei.fc4a0dda.mp3\";","module.exports = __webpack_public_path__ + \"static/media/aɪ.741ea969.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɔɪ.9004c0a1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/aʊ.b9f05ff6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/əʊ.f4f185db.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ɪə.1d457068.mp3\";","module.exports = __webpack_public_path__ + \"static/media/eə.5731744b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ʊə.915ee3a8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/p.bd98a63b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/b.fdda062b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/t.0cd73c92.mp3\";","module.exports = __webpack_public_path__ + \"static/media/d.117264ef.mp3\";","module.exports = __webpack_public_path__ + \"static/media/k.856b1ed2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/g.1cc82758.mp3\";","module.exports = __webpack_public_path__ + \"static/media/s.bdd1ca24.mp3\";","module.exports = __webpack_public_path__ + \"static/media/z.351810b8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ʃ.88ecc499.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ʒ.e7ab836e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tʃ.bc38cb6d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dʒ.675fc6b9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/f.2393ad1d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/v.3f68308a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/w.b8a5f7c5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/j.4a18910c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/h.39f093e4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/θ.f73c7511.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ð.1eb46bed.mp3\";","module.exports = __webpack_public_path__ + \"static/media/m.d2c2aa8e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/n.f093ba45.mp3\";","module.exports = __webpack_public_path__ + \"static/media/l.1474e0f3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/r.fa3c79af.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ŋ.35e25a86.mp3\";","module.exports = __webpack_public_path__ + \"static/media/refresh.b3b24dc8.svg\";","import React from 'react';\nimport Speech from 'speak-tts';\nimport SpeakerIcon from '../../assets/img/speaker.svg';\n\nconst InitSpeech = {\n  'volume': 1,\n  'lang': 'en-US',\n  'rate': 1,\n  'pitch': 1,\n  'voice': 'Google US English',\n  'splitSentences': true,\n  'listeners': {\n    'onvoiceschanged': (voices) => {\n      console.log(\"Event voiceschanged\", voices)\n    }\n  }\n};\n\nconst speech = new Speech()\nif(speech.hasBrowserSupport()) {\n  console.log(\"speech synthesis supported\")\n}\n\nspeech.init(InitSpeech).then((data) => {\n  console.log(\"Speech is ready, voices are available\", data)\n}).catch(e => {\n  console.error(\"An error occured while initializing : \", e)\n})\n\nconst SpeechText = React.memo((props) => {\n  const { text } = props;\n\n  const playSpeech = () => {\n    speech.speak({\n      text,\n    }).then(() => {\n      console.log(\"Success !\")\n    }).catch(e => {\n      console.error(\"An error occurred :\", e)\n    })\n  }\n\n  playSpeech()\n\n  return <div className=\"wrapper-speech\">\n    <h3 className=\"text\">{text}</h3>\n    <button className=\"btn-play\" onClick={playSpeech}>\n      <img src={SpeakerIcon}/>\n    </button>\n  </div>\n})\n\nexport default SpeechText;\n","import i1 from './i1.mp3';\nimport æ from './æ.mp3';\nimport ɒ from './ɒ.mp3';\nimport ɪ from './ɪ.mp3';\nimport e from './e.mp3';\nimport ʌ from './ʌ.mp3';\nimport ɑ1 from './ɑ1.mp3';\nimport ɔ1 from './ɔ1.mp3';\nimport ʊ from './ʊ.mp3';\nimport u1 from './u1.mp3';\nimport ɜ1 from './ɜ1.mp3';\nimport ə from './ə.mp3';\nimport eɪ from './ei.mp3';\nimport aɪ from './aɪ.mp3';\nimport ɔɪ from './ɔɪ.mp3';\nimport aʊ from './aʊ.mp3';\nimport əʊ from './əʊ.mp3';\nimport ɪə from './ɪə.mp3';\nimport eə from './eə.mp3';\nimport ʊə from './ʊə.mp3';\nimport p from './p.mp3';\nimport b from './b.mp3';\nimport t from './t.mp3';\nimport d from './d.mp3';\nimport k from './k.mp3';\nimport g from './g.mp3';\nimport s from './s.mp3';\nimport z from './z.mp3';\nimport ʃ from './ʃ.mp3';\nimport ʒ from './ʒ.mp3';\nimport tʃ from './tʃ.mp3';\nimport dʒ from './dʒ.mp3';\nimport f from './f.mp3';\nimport v from './v.mp3';\nimport w from './w.mp3';\nimport j from './j.mp3';\nimport h from './h.mp3';\nimport θ from './θ.mp3';\nimport ð from './ð.mp3';\nimport m from './m.mp3';\nimport n from './n.mp3';\nimport l from './l.mp3';\nimport r from './r.mp3';\nimport ŋ from './ŋ.mp3';\n\nexport default {\n  i1,\n  æ,\n  ɒ,\n  ɪ,\n  e,\n  ʌ,\n  ɑ1,\n  ɔ1,\n  ʊ,\n  u1,\n  ɜ1,\n  eɪ,\n  ə,\n  aɪ,\n  ɔɪ,\n  aʊ,\n  əʊ,\n  ɪə,\n  eə,\n  ʊə,\n  p,\n  b,\n  t,\n  d,\n  k,\n  g,\n  s,\n  z,\n  ʃ,\n  ʒ,\n  tʃ,\n  dʒ,\n  f,\n  v,\n  w,\n  j,\n  h,\n  θ,\n  ð,\n  m,\n  n,\n  l,\n  r,\n  ŋ\n}\n","import React from 'react';\nimport MP3 from '../../assets/mp3IPA'\n\nconst buttonExtent = ['ˈ', 'delete'];\n\nconst KeyAPI = (props) => {\n  const { keySpelling, onChange } = props;\n  const playIPA = (key) => {\n    const audio1 = document.getElementById(key);\n    audio1 && audio1.play()\n  }\n\n  const renderButton = () => {\n    return (\n      <div className=\"key-text\">\n        {\n          [...keySpelling, ...buttonExtent].map((key, index) => {\n            const getID = key.replace('ː', '1')\n\n            return (\n              <React.Fragment key={key}>\n                <button onMouseOver={() => playIPA(getID)} key={index} onClick={() => onChange(key)}>{key}</button>\n                <audio id={getID}>\n                  <source src={MP3[getID]} type=\"audio/mpeg\"/>\n                </audio>\n              </React.Fragment>\n            )\n          })\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"key-spelling\">\n      {renderButton()}\n    </div>\n  )\n}\n\nexport default KeyAPI;\n","import React, { useState } from 'react';\nimport {  Translator  } from 'phonetic-english'\n\nimport './App.css';\nimport './assets/scss/index.scss';\n\nimport SpeechText from './components/SpeakText'\nimport IPAKey from './components/KeypressIpa'\nimport { randomWords } from './helpers/RandomWords'\nimport RefreshIcon from './assets/img/refresh.svg'\n\nconst spelling = \"æ    ɛ    ɑː   e     ʌ    ə    b    tʃ\\nd    ɛ    iː   f    g    h    hw   ɪ\\naɪ   dʒ   k    l    m    ŋ    n    ɔɪ\\naʊ   ɔː   oʊ   uː   ʊ    p    r    ʃ\\ns    θ    ð    t    ɜr   v    w    j\\nʒ    z\".split(/\\s+/)\nconst boardKey = \"iː   ɪ   ʊ    uː   ɪə   eɪ    e    ə    ɜː    ɔː   ʊə    ɔɪ   əʊ  æ    ʌ    ɑː   ɒ   eə    aɪ   aʊ  p    b    t    d    tʃ    dʒ   k    g    f    v    θ    ð    s    z     ʃ    ʒ   m    n    ŋ    h    l    r    w    j\".split(/\\s+/)\n\nconst TT = new Translator(spelling);\n\nconst App = () => {\n  const initWord = 'game' //randomWords()[0]\n  const initPhonetic = TT.translate(initWord);\n\n  const [words, setWords] = useState(initWord);\n  const [phonetic, setPhonetic] = useState(initPhonetic)\n  const [currentPhonetic, setCurrentPhonetic] = useState('')\n\n  const newWord = () => {\n    const _newWord = randomWords()[0];\n    const _newPhonetic = TT.translate(_newWord)\n    setWords(_newWord)\n    setPhonetic(_newPhonetic)\n    setCurrentPhonetic('')\n  }\n\n  const handleChangePhonetic = (text) => {\n    let _newPhonetic = ``\n    if (text === 'delete') {\n      _newPhonetic = `${currentPhonetic}`.slice(0, -1);\n    } else {\n      _newPhonetic = `${currentPhonetic}${text}`\n    }\n\n    setCurrentPhonetic(_newPhonetic)\n  }\n  console.log('phonetic ', phonetic)\n\n  const isTrue = phonetic === currentPhonetic\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SpeechText text={words} />\n        <h3>/ {currentPhonetic} /</h3>\n        <IPAKey keySpelling={boardKey} onChange={handleChangePhonetic} />\n        <div className=\"footer\">\n          { isTrue && <button onClick={newWord} alt=\"New Word\">\n            <img src={RefreshIcon} />\n          </button> }\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import RandomWords from 'random-words';\n\nconst randomWords = (type = {exactly: 1, maxLength: 4 }) => {\n  const words = RandomWords(type);\n\n  return words;\n}\n\nexport {\n  randomWords\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}